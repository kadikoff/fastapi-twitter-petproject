services:

  nginx:
    build:
      context: .
      dockerfile: client/Dockerfile
    container_name: nginx
    depends_on:
      - server
    ports:
      - "8080:80"
    volumes:
      - ./server/medias:/usr/share/nginx/medias
    networks:
      - mynetwork

  server:
    build:
      context: .
      dockerfile: server/Dockerfile
    container_name: server
    depends_on:
      postgres:
        condition: service_healthy
        restart: true
    ports:
      - "8000:8000"
    volumes:
      - ./server/medias:/project/server/medias
    networks:
      - mynetwork

  postgres:
    image: postgres:15.5-alpine3.17
    container_name: postgres
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d twitter -U admin" ]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
    command: >
      postgres
      -c log_destination=stderr
      -c logging_collector=on
      -c log_directory=/var/lib/postgresql/logs
    ports:
      - "5432:5432"
    volumes:
      - ./db/:/var/lib/postgresql/data:delegated
    networks:
      - mynetwork

  prometheus:
    image: prom/prometheus:v2.47.2
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    networks:
      - mynetwork

  grafana:
    image:  grafana/grafana-oss:10.2.2
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASS}
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning  # Prometheus и дашборд будет уже настроен (конфиги внутри)
      - ./grafana:/var/lib/grafana
    user: "root"
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge
